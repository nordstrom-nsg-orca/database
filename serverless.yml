service: postgressql
​
frameworkVersion: ">=1.57.0"
​
provider:
  name: aws
  stage: dev
  region: us-west-2
​
resources:
  Resources:
    nsgCloudDB:
      Type: "AWS::RDS::DBInstance"
      Properties:
        AvailabilityZone: us-west-2a
        AllocatedStorage: "100"
        # DBInstanceClass: db.t2.micro ## old instance class
        DBInstanceClass: db.t2.small
        EnablePerformanceInsights: true
        DBName: "nsgCloudDB"
        DBInstanceIdentifier: "nsgCloudDB"
        Engine: postgres
        Iops: "1000"
        MasterUserPassword: ${env:NSG_DB_PASS}
        MasterUsername: nsg
        Port: 5432
        DBSubnetGroupName: default-vpc-0538b50f1bd3cfd82
    orcaDB:
      Type: "AWS::RDS::DBInstance"
      Properties:
        AvailabilityZone: us-west-2a
        AllocatedStorage: "100"
        DBInstanceClass: db.t2.small
        EnablePerformanceInsights: true
        DBName: "orcaDB"
        DBInstanceIdentifier: "orcaDB"
        Engine: postgres
        Iops: "1000"
        MasterUserPassword: ${env:ORCA_DB_PASS}
        MasterUsername: orca
        Port: 5432
        DBSubnetGroupName: default-vpc-0538b50f1bd3cfd82
        Tags:
        -
          Key: scheduler-rds-startstop
          Value: opt-out
​
  Outputs:
    nsgCloudDBUrl:
      Value: !Join
       - ':'
       - - "https://"
         - !GetAtt nsgCloudDB.Endpoint.Address
         - !GetAtt nsgCloudDB.Endpoint.Port
      Export:
        Name: nsgCloudDBUrl
    orcaDBUrl:
      Value: !Join
       - ':'
       - - "https://"
         - !GetAtt orcaDB.Endpoint.Address
         - !GetAtt orcaDB.Endpoint.Port
      Export:
        Name: orcaDBUrl
